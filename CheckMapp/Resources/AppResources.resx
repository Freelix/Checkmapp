<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddNote" xml:space="preserve">
    <value>New note</value>
  </data>
  <data name="AddPicture" xml:space="preserve">
    <value>Add picture</value>
  </data>
  <data name="AddTrip" xml:space="preserve">
    <value>New trip</value>
  </data>
  <data name="AddTripArrival" xml:space="preserve">
    <value>Trip Arrival</value>
  </data>
  <data name="AddTripDate" xml:space="preserve">
    <value>Schedule Date</value>
  </data>
  <data name="AddTripDeparture" xml:space="preserve">
    <value>Trip Departure</value>
  </data>
  <data name="AddTripName" xml:space="preserve">
    <value>Trip Name</value>
  </data>
  <data name="AllTime" xml:space="preserve">
    <value>All Time</value>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>checkmapp</value>
  </data>
  <data name="ConfirmButton" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmNewTrip" xml:space="preserve">
    <value>Confirm Trip</value>
  </data>
  <data name="ContinueTrip" xml:space="preserve">
    <value>Continue Trip</value>
  </data>
  <data name="CountNotes" xml:space="preserve">
    <value>Notes : {0}</value>
  </data>
  <data name="CountPhotos" xml:space="preserve">
    <value>Photos : {0}</value>
  </data>
  <data name="CountPOI" xml:space="preserve">
    <value>P.o. Interest : {0}</value>
  </data>
  <data name="CurrentTrip" xml:space="preserve">
    <value>current trip</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date :</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day :</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>edit</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>dashboard</value>
  </data>
  <data name="LastActivities" xml:space="preserve">
    <value>last activites</value>
  </data>
  <data name="LastMonth" xml:space="preserve">
    <value>Last Month</value>
  </data>
  <data name="LastSevenDays" xml:space="preserve">
    <value>Last Seven Days</value>
  </data>
  <data name="LastSixMonths" xml:space="preserve">
    <value>Last Six Months</value>
  </data>
  <data name="LastTwoWeeks" xml:space="preserve">
    <value>Last Two Weeks</value>
  </data>
  <data name="LastYear" xml:space="preserve">
    <value>Last Year</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>list</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Enter a location :</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message :</value>
  </data>
  <data name="EditNote" xml:space="preserve">
    <value>Edit note</value>
  </data>
  <data name="NoteContent" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="NoteDate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="NoteInterestPoint" xml:space="preserve">
    <value>Point of Interest</value>
  </data>
  <data name="NoteName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="OldTrip" xml:space="preserve">
    <value>older trips</value>
  </data>
  <data name="POITitle" xml:space="preserve">
    <value>Points of Interest</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>fr-FR</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="SampleProperty" xml:space="preserve">
    <value>Exemple de valeur de propriété d'exécution</value>
  </data>
  <data name="SelectCountry" xml:space="preserve">
    <value>Select a country : </value>
  </data>
  <data name="SelectDate" xml:space="preserve">
    <value>Select a date : </value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>Share on...</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="SortByCountry" xml:space="preserve">
    <value>Sort by Country</value>
  </data>
  <data name="SortByDate" xml:space="preserve">
    <value>Sort by Date</value>
  </data>
  <data name="SortMode" xml:space="preserve">
    <value>Sort Mode</value>
  </data>
  <data name="Timeline" xml:space="preserve">
    <value>timeline</value>
  </data>
  <data name="YourJournal" xml:space="preserve">
    <value>your journal</value>
  </data>
  <data name="YourMap" xml:space="preserve">
    <value>your map</value>
  </data>
  <data name="YourTimeLine" xml:space="preserve">
    <value>your timeline</value>
  </data>
  <data name="YourTravels" xml:space="preserve">
    <value>your travels</value>
  </data>
  <data name="FinishTrip" xml:space="preserve">
    <value>Finish the trip</value>
  </data>
  <data name="AddPOI" xml:space="preserve">
    <value>Add p.o. interest</value>
  </data>
  <data name="NoteTripTitle" xml:space="preserve">
    <value>Notes ({0})</value>
  </data>
  <data name="PhotoTripTitle" xml:space="preserve">
    <value>Photos ({0})</value>
  </data>
  <data name="POITripTitle" xml:space="preserve">
    <value>Points of interest ({0})</value>
  </data>
  <data name="Statistic" xml:space="preserve">
    <value>Statistic</value>
  </data>
  <data name="MyNotes" xml:space="preserve">
    <value>My Notes</value>
  </data>
  <data name="SeeNotes" xml:space="preserve">
    <value>see notes...</value>
  </data>
  <data name="SeePhotos" xml:space="preserve">
    <value>see photos...</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="MyPhoto" xml:space="preserve">
    <value>My Photos</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EditPicture" xml:space="preserve">
    <value>Edit picture</value>
  </data>
  <data name="EditTrip" xml:space="preserve">
    <value>Edit trip</value>
  </data>
  <data name="ChoosePicture" xml:space="preserve">
    <value>choose picture</value>
  </data>
  <data name="ConfirmationDeleteNote" xml:space="preserve">
    <value>Are you sure you want to delete this note?</value>
  </data>
  <data name="ConfirmationDeleteNotes" xml:space="preserve">
    <value>Are you sure you want to delete theses notes?</value>
  </data>
  <data name="ConfirmationDeletePicture" xml:space="preserve">
    <value>Are you sure you want to delete this photo?</value>
  </data>
  <data name="ConfirmationDeletePictures" xml:space="preserve">
    <value>Are you sure you want to delete these photos?</value>
  </data>
  <data name="ConfirmationDeleteTrip" xml:space="preserve">
    <value>Are you sure you want to delete this trip?</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>select</value>
  </data>
  <data name="ConfirmDeletePOI" xml:space="preserve">
    <value>Are you sure you want to delete this point of interest?</value>
  </data>
  <data name="ConfirmDeletePOIs" xml:space="preserve">
    <value>Are you sure you want to delete theses point of interests?</value>
  </data>
</root>